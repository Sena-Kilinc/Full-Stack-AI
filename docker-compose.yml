version: '3.8'

services:
  ml-pipeline-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ml-pipeline-api
    ports:
      - "8000:8000"
    volumes:
      # Data, models ve logs için persistent volumes
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      # Development için source code mounting (opsiyonel)
      - ./main.py:/app/main.py
      - ./models.py:/app/models.py
      - ./ml_pipeline.py:/app/ml_pipeline.py
      - ./feature_engineering.py:/app/feature_engineering.py
      - ./config.py:/app/config.py
      - ./logger.py:/app/logger.py
    environment:
      # Application settings
      - APP_NAME=ML Pipeline API
      - APP_VERSION=1.0.0
      - DEBUG=false
      
      # Server settings
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=1
      
      # Directories
      - DATA_DIR=/app/data
      - MODELS_DIR=/app/models
      - LOGS_DIR=/app/logs
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE=app.log
      
      # ML Settings
      - DEFAULT_TEST_SIZE=0.25
      - DEFAULT_RANDOM_STATE=42
      - DEFAULT_ALGORITHM=random_forest
      
      # Performance
      - PYTHONUNBUFFERED=1
    networks:
      - ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  ml-network:
    driver: bridge

volumes:
  data-volume:
  models-volume:
  logs-volume: